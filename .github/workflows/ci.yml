name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x, 22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install CMake
      uses: jwlawson/actions-setup-cmake@v1.14
      with:
        cmake-version: 'latest'
    
    - name: Install GStreamer dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev \
          libgstreamer-plugins-bad1.0-dev \
          gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good \
          gstreamer1.0-plugins-bad \
          gstreamer1.0-plugins-ugly \
          gstreamer1.0-libav \
          pkg-config
    
    - name: Install GStreamer dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install gstreamer gst-plugins-base gst-plugins-good gst-plugins-bad gst-plugins-ugly pkg-config
        # Set environment variables for GStreamer library paths
        echo "PKG_CONFIG_PATH=$(brew --prefix)/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
        echo "LIBRARY_PATH=$(brew --prefix)/lib:$LIBRARY_PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$(brew --prefix)/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
    
    - name: Setup Visual Studio Build Tools
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    
    - name: Install GStreamer dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Install pkg-config
        choco install pkgconfiglite -y
        
        # Download and install official GStreamer Windows installer
        $gstVersion = "1.26.2"
        $gstInstaller = "gstreamer-1.0-msvc-x86_64-$gstVersion.msi"
        $gstDevInstaller = "gstreamer-1.0-devel-msvc-x86_64-$gstVersion.msi"
        
        # Download runtime
        Invoke-WebRequest -Uri "https://gstreamer.freedesktop.org/data/pkg/windows/$gstVersion/msvc/$gstInstaller" -OutFile "$gstInstaller"
        Start-Process msiexec.exe -Wait -ArgumentList "/i $gstInstaller /quiet /norestart ADDLOCAL=ALL"
        
        # Download development files
        Invoke-WebRequest -Uri "https://gstreamer.freedesktop.org/data/pkg/windows/$gstVersion/msvc/$gstDevInstaller" -OutFile "$gstDevInstaller"
        Start-Process msiexec.exe -Wait -ArgumentList "/i $gstDevInstaller /quiet /norestart ADDLOCAL=ALL"
        
        # Set environment variables for GStreamer 1.26+ (new installation path)
        echo "C:\Program Files\gstreamer\1.0\msvc_x86_64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "PKG_CONFIG_PATH=C:\Program Files\gstreamer\1.0\msvc_x86_64\lib\pkgconfig" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "GSTREAMER_1_0_ROOT_MSVC_X86_64=C:\Program Files\gstreamer\1.0\msvc_x86_64" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      shell: powershell
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Run Node.js tests
      run: npm run test:node
    
    # Bun tests are disabled on Windows due to a known segfault issue with native modules
    - name: Setup Bun
      if: matrix.os != 'windows-latest'
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Run Bun tests
      if: matrix.os != 'windows-latest'
      run: npm run test:bun
    
    - name: Run unit tests
      run: npm run test:unit
